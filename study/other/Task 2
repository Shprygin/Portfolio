{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "541eddb1",
   "metadata": {},
   "source": [
    "### Task 2"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8c03215b",
   "metadata": {},
   "source": [
    "В этом задании я протестирую разные методы классификации для определения тональности отзывов\n",
    "\n",
    "Алгоритм, который я буду использовать\n",
    "1) Определить топ 100 самых частых отзывов во всех отзывах\n",
    "\n",
    "2) Определить вес каждого из этих 100 слов в отзыве i по формуле: $weight_i=(count(word_i)/length(text_j))$\n",
    "\n",
    "3) Слово $word_i$, $i$ in [1; 1000], является переменной, а ее вес $weight_i$, $weight_i$ in [0; 1], значением этой переменной. По значению этих переменных мы и будем определять тональность"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "d924d242",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8750140b",
   "metadata": {},
   "source": [
    "Выгружаю исходную таблицу"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "d95d770e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>isPositive</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>27.09.19 через сайт в разделе \"Рефинансировани...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Добрый день! Неоднократно поступают звонки по ...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>В первый раз решила воспользоваться кредитной ...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>На самом дело уже накипело из-за участившегося...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Если вы дорожите своими нервами - ни при каких...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3945</th>\n",
       "      <td>Очень хороший банк,рекомендую клиентам! Работа...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3946</th>\n",
       "      <td>Действительно Супер карта, дает 10% кешбека на...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3947</th>\n",
       "      <td>Спасибо за подарок на День Рождения) (повышенн...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3948</th>\n",
       "      <td>Хотелось бы поделиться положительными впечатле...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3949</th>\n",
       "      <td>Здравствуйте. Мне нравится как работает ваш ме...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3950 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                   text  isPositive\n",
       "0     27.09.19 через сайт в разделе \"Рефинансировани...           0\n",
       "1     Добрый день! Неоднократно поступают звонки по ...           0\n",
       "2     В первый раз решила воспользоваться кредитной ...           0\n",
       "3     На самом дело уже накипело из-за участившегося...           0\n",
       "4     Если вы дорожите своими нервами - ни при каких...           0\n",
       "...                                                 ...         ...\n",
       "3945  Очень хороший банк,рекомендую клиентам! Работа...           1\n",
       "3946  Действительно Супер карта, дает 10% кешбека на...           1\n",
       "3947  Спасибо за подарок на День Рождения) (повышенн...           1\n",
       "3948  Хотелось бы поделиться положительными впечатле...           1\n",
       "3949  Здравствуйте. Мне нравится как работает ваш ме...           1\n",
       "\n",
       "[3950 rows x 2 columns]"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv(r'/Users/levtsipes/Desktop/Work/Тестовое задание NLP от BST/train_tin.csv', encoding='cp1251')\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "2f98e661",
   "metadata": {},
   "outputs": [],
   "source": [
    "from nltk.tokenize import sent_tokenize, word_tokenize\n",
    "import nltk\n",
    "from nltk.corpus import stopwords"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "b600f623",
   "metadata": {},
   "outputs": [],
   "source": [
    "import re"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "148ef869",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pymorphy2\n",
    "morph = pymorphy2.MorphAnalyzer()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "7e60f640",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'раздел'"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def lemmatize(word):\n",
    "    return morph.parse(word)[0].normal_form\n",
    "lemmatize (words_true[1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 434,
   "id": "f5250c38",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_wordbox=pd.DataFrame(columns = ['text','isPositive'], index = list(range(3950)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 435,
   "id": "61bb8101",
   "metadata": {},
   "outputs": [],
   "source": [
    "pd.options.mode.chained_assignment = None"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a29e38f0",
   "metadata": {},
   "source": [
    "Получаю список всех слов (с повторениями) total_word_list; \n",
    "\n",
    "Создаю таблицу df_wordbox, где в колонке text содержится список лематизированных слов, отчищенных от пунктуации и стоп-слов"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 436,
   "id": "7ba390e2",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "total_word_list=[]\n",
    "stop_words=set(stopwords.words('russian'))\n",
    "\n",
    "for i in range(len(df['text'])):\n",
    "    words = word_tokenize(df['text'][i])\n",
    "\n",
    "    words_true =[]\n",
    "    words_clean = []\n",
    "\n",
    "    for word in words:\n",
    "        word = re.sub(r'[^\\w\\s]', '', word)\n",
    "        word = re.sub(r'[0-9]+', '', word)\n",
    "        if word != '':\n",
    "            words_clean.append(word.lower())\n",
    "\n",
    "    for word in words_clean:\n",
    "        if word not in stop_words:\n",
    "            words_true.append(word)\n",
    "\n",
    "    words_lem = []\n",
    "    for word in words_true:\n",
    "        words_lem.append(lemmatize(word))\n",
    "    \n",
    "    total_word_list+=words_lem\n",
    "\n",
    "    \n",
    "    df_wordbox['text'][i] = words_lem\n",
    "    df_wordbox['isPositive'][i] = df['isPositive'][i]\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 437,
   "id": "a03abfb9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>isPositive</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>[сайт, раздел, рефинансирование, сторонний, кр...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>[добрый, день, неоднократно, поступать, звонок...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>[первый, решить, воспользоваться, кредитный, к...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>[сам, дело, накипеть, изз, участиться, намахал...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>[дорожить, свой, нерв, какой, обстоятельство, ...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3945</th>\n",
       "      <td>[очень, хороший, банк, рекомендовать, клиент, ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3946</th>\n",
       "      <td>[действительно, супер, карта, давать, кешбек, ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3947</th>\n",
       "      <td>[спасибо, подарок, день, рождение, повышенный,...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3948</th>\n",
       "      <td>[хотеться, поделиться, положительный, впечатле...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3949</th>\n",
       "      <td>[здравствуйте, нравиться, работать, ваш, менед...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3950 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                   text isPositive\n",
       "0     [сайт, раздел, рефинансирование, сторонний, кр...          0\n",
       "1     [добрый, день, неоднократно, поступать, звонок...          0\n",
       "2     [первый, решить, воспользоваться, кредитный, к...          0\n",
       "3     [сам, дело, накипеть, изз, участиться, намахал...          0\n",
       "4     [дорожить, свой, нерв, какой, обстоятельство, ...          0\n",
       "...                                                 ...        ...\n",
       "3945  [очень, хороший, банк, рекомендовать, клиент, ...          1\n",
       "3946  [действительно, супер, карта, давать, кешбек, ...          1\n",
       "3947  [спасибо, подарок, день, рождение, повышенный,...          1\n",
       "3948  [хотеться, поделиться, положительный, впечатле...          1\n",
       "3949  [здравствуйте, нравиться, работать, ваш, менед...          1\n",
       "\n",
       "[3950 rows x 2 columns]"
      ]
     },
     "execution_count": 437,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_wordbox"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5cdb5d27",
   "metadata": {},
   "source": [
    "Вывожу топ-100 слов и создаю соответствующие переменные, вычисляя занчения для каждой строки"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "b4ebfb57",
   "metadata": {},
   "outputs": [],
   "source": [
    "import collections"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 438,
   "id": "fb403cc0",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['банк',\n",
       " 'карта',\n",
       " 'тинькофф',\n",
       " 'это',\n",
       " 'счёт',\n",
       " 'день',\n",
       " 'который',\n",
       " 'сотрудник',\n",
       " 'мой',\n",
       " 'вопрос',\n",
       " 'клиент',\n",
       " 'очень',\n",
       " 'деньга',\n",
       " 'свой',\n",
       " 'время',\n",
       " 'кредит',\n",
       " 'год',\n",
       " 'такой',\n",
       " 'кредитный',\n",
       " 'сказать',\n",
       " 'мочь',\n",
       " 'решить',\n",
       " 'заявка',\n",
       " 'документ',\n",
       " 'проблема',\n",
       " 'сумма',\n",
       " 'хотеть',\n",
       " 'получить',\n",
       " 'менеджер',\n",
       " 'ответ',\n",
       " 'другой',\n",
       " 'работа',\n",
       " 'спасибо',\n",
       " 'ваш',\n",
       " 'пользоваться',\n",
       " 'дать',\n",
       " 'чат',\n",
       " 'весь',\n",
       " 'обслуживание',\n",
       " 'месяц',\n",
       " 'просто',\n",
       " 'позвонить',\n",
       " 'звонить',\n",
       " 'телефон',\n",
       " 'приложение',\n",
       " 'работать',\n",
       " 'услуга',\n",
       " 'дебетовый',\n",
       " 'платёж',\n",
       " 'договор',\n",
       " 'быть',\n",
       " 'представитель',\n",
       " 'один',\n",
       " 'сделать',\n",
       " 'ситуация',\n",
       " 'средство',\n",
       " 'рубль',\n",
       " 'смс',\n",
       " 'звонок',\n",
       " 'информация',\n",
       " 'условие',\n",
       " 'номер',\n",
       " 'процент',\n",
       " 'говорить',\n",
       " 'человек',\n",
       " 'оператор',\n",
       " 'итог',\n",
       " 'тот',\n",
       " 'комиссия',\n",
       " 'всё',\n",
       " 'данный',\n",
       " 'решение',\n",
       " 'сайт',\n",
       " 'хороший',\n",
       " 'написать',\n",
       " 'операция',\n",
       " 'несколько',\n",
       " 'лимит',\n",
       " 'первый',\n",
       " 'встреча',\n",
       " 'ответить',\n",
       " 'личный',\n",
       " 'перевод',\n",
       " 'минута',\n",
       " 'прийти',\n",
       " 'самый',\n",
       " 'обратиться',\n",
       " 'быстро',\n",
       " 'поддержка',\n",
       " 'открыть',\n",
       " 'специалист',\n",
       " 'знать',\n",
       " 'нужно',\n",
       " 'сам',\n",
       " 'час',\n",
       " 'ждать',\n",
       " 'оформить',\n",
       " 'отзыв',\n",
       " 'сегодня',\n",
       " 'сервис']"
      ]
     },
     "execution_count": 438,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top_words_collection = collections.Counter(total_word_list).most_common(100) \n",
    "variables = []\n",
    "for word in top_words_collection:\n",
    "    variables.append(word[0])\n",
    "variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "id": "e003b971",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 439,
   "id": "d74360fd",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>isPositive</th>\n",
       "      <th>банк</th>\n",
       "      <th>карта</th>\n",
       "      <th>тинькофф</th>\n",
       "      <th>это</th>\n",
       "      <th>счёт</th>\n",
       "      <th>день</th>\n",
       "      <th>который</th>\n",
       "      <th>сотрудник</th>\n",
       "      <th>...</th>\n",
       "      <th>специалист</th>\n",
       "      <th>знать</th>\n",
       "      <th>нужно</th>\n",
       "      <th>сам</th>\n",
       "      <th>час</th>\n",
       "      <th>ждать</th>\n",
       "      <th>оформить</th>\n",
       "      <th>отзыв</th>\n",
       "      <th>сегодня</th>\n",
       "      <th>сервис</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>[сайт, раздел, рефинансирование, сторонний, кр...</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>[добрый, день, неоднократно, поступать, звонок...</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>[первый, решить, воспользоваться, кредитный, к...</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>[сам, дело, накипеть, изз, участиться, намахал...</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>[дорожить, свой, нерв, какой, обстоятельство, ...</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3945</th>\n",
       "      <td>[очень, хороший, банк, рекомендовать, клиент, ...</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3946</th>\n",
       "      <td>[действительно, супер, карта, давать, кешбек, ...</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3947</th>\n",
       "      <td>[спасибо, подарок, день, рождение, повышенный,...</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3948</th>\n",
       "      <td>[хотеться, поделиться, положительный, впечатле...</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3949</th>\n",
       "      <td>[здравствуйте, нравиться, работать, ваш, менед...</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3950 rows × 102 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                   text isPositive  банк  \\\n",
       "0     [сайт, раздел, рефинансирование, сторонний, кр...          0   NaN   \n",
       "1     [добрый, день, неоднократно, поступать, звонок...          0   NaN   \n",
       "2     [первый, решить, воспользоваться, кредитный, к...          0   NaN   \n",
       "3     [сам, дело, накипеть, изз, участиться, намахал...          0   NaN   \n",
       "4     [дорожить, свой, нерв, какой, обстоятельство, ...          0   NaN   \n",
       "...                                                 ...        ...   ...   \n",
       "3945  [очень, хороший, банк, рекомендовать, клиент, ...          1   NaN   \n",
       "3946  [действительно, супер, карта, давать, кешбек, ...          1   NaN   \n",
       "3947  [спасибо, подарок, день, рождение, повышенный,...          1   NaN   \n",
       "3948  [хотеться, поделиться, положительный, впечатле...          1   NaN   \n",
       "3949  [здравствуйте, нравиться, работать, ваш, менед...          1   NaN   \n",
       "\n",
       "      карта  тинькофф  это  счёт  день  который  сотрудник  ...  специалист  \\\n",
       "0       NaN       NaN  NaN   NaN   NaN      NaN        NaN  ...         NaN   \n",
       "1       NaN       NaN  NaN   NaN   NaN      NaN        NaN  ...         NaN   \n",
       "2       NaN       NaN  NaN   NaN   NaN      NaN        NaN  ...         NaN   \n",
       "3       NaN       NaN  NaN   NaN   NaN      NaN        NaN  ...         NaN   \n",
       "4       NaN       NaN  NaN   NaN   NaN      NaN        NaN  ...         NaN   \n",
       "...     ...       ...  ...   ...   ...      ...        ...  ...         ...   \n",
       "3945    NaN       NaN  NaN   NaN   NaN      NaN        NaN  ...         NaN   \n",
       "3946    NaN       NaN  NaN   NaN   NaN      NaN        NaN  ...         NaN   \n",
       "3947    NaN       NaN  NaN   NaN   NaN      NaN        NaN  ...         NaN   \n",
       "3948    NaN       NaN  NaN   NaN   NaN      NaN        NaN  ...         NaN   \n",
       "3949    NaN       NaN  NaN   NaN   NaN      NaN        NaN  ...         NaN   \n",
       "\n",
       "      знать  нужно  сам  час  ждать  оформить  отзыв  сегодня  сервис  \n",
       "0       NaN    NaN  NaN  NaN    NaN       NaN    NaN      NaN     NaN  \n",
       "1       NaN    NaN  NaN  NaN    NaN       NaN    NaN      NaN     NaN  \n",
       "2       NaN    NaN  NaN  NaN    NaN       NaN    NaN      NaN     NaN  \n",
       "3       NaN    NaN  NaN  NaN    NaN       NaN    NaN      NaN     NaN  \n",
       "4       NaN    NaN  NaN  NaN    NaN       NaN    NaN      NaN     NaN  \n",
       "...     ...    ...  ...  ...    ...       ...    ...      ...     ...  \n",
       "3945    NaN    NaN  NaN  NaN    NaN       NaN    NaN      NaN     NaN  \n",
       "3946    NaN    NaN  NaN  NaN    NaN       NaN    NaN      NaN     NaN  \n",
       "3947    NaN    NaN  NaN  NaN    NaN       NaN    NaN      NaN     NaN  \n",
       "3948    NaN    NaN  NaN  NaN    NaN       NaN    NaN      NaN     NaN  \n",
       "3949    NaN    NaN  NaN  NaN    NaN       NaN    NaN      NaN     NaN  \n",
       "\n",
       "[3950 rows x 102 columns]"
      ]
     },
     "execution_count": 439,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for var in variables:\n",
    "    df_wordbox[var]=np.nan\n",
    "df_wordbox"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 440,
   "id": "a78c8d6a",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>isPositive</th>\n",
       "      <th>банк</th>\n",
       "      <th>карта</th>\n",
       "      <th>тинькофф</th>\n",
       "      <th>это</th>\n",
       "      <th>счёт</th>\n",
       "      <th>день</th>\n",
       "      <th>который</th>\n",
       "      <th>сотрудник</th>\n",
       "      <th>...</th>\n",
       "      <th>специалист</th>\n",
       "      <th>знать</th>\n",
       "      <th>нужно</th>\n",
       "      <th>сам</th>\n",
       "      <th>час</th>\n",
       "      <th>ждать</th>\n",
       "      <th>оформить</th>\n",
       "      <th>отзыв</th>\n",
       "      <th>сегодня</th>\n",
       "      <th>сервис</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>[сайт, раздел, рефинансирование, сторонний, кр...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.041096</td>\n",
       "      <td>0.017123</td>\n",
       "      <td>0.003425</td>\n",
       "      <td>0.006849</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.006849</td>\n",
       "      <td>0.023973</td>\n",
       "      <td>0.017123</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.003425</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.003425</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>[добрый, день, неоднократно, поступать, звонок...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.061728</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.012346</td>\n",
       "      <td>0.012346</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.012346</td>\n",
       "      <td>0.012346</td>\n",
       "      <td>0.037037</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.012346</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>[первый, решить, воспользоваться, кредитный, к...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.024194</td>\n",
       "      <td>0.048387</td>\n",
       "      <td>0.008065</td>\n",
       "      <td>0.008065</td>\n",
       "      <td>0.016129</td>\n",
       "      <td>0.008065</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.008065</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.008065</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>[сам, дело, накипеть, изз, участиться, намахал...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.026549</td>\n",
       "      <td>0.011799</td>\n",
       "      <td>0.008850</td>\n",
       "      <td>0.011799</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.008850</td>\n",
       "      <td>0.017699</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.005900</td>\n",
       "      <td>0.00295</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00295</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00295</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002950</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>[дорожить, свой, нерв, какой, обстоятельство, ...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.041935</td>\n",
       "      <td>0.016129</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.009677</td>\n",
       "      <td>0.003226</td>\n",
       "      <td>0.009677</td>\n",
       "      <td>0.009677</td>\n",
       "      <td>0.019355</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.006452</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.006452</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3945</th>\n",
       "      <td>[очень, хороший, банк, рекомендовать, клиент, ...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.066667</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3946</th>\n",
       "      <td>[действительно, супер, карта, давать, кешбек, ...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.006897</td>\n",
       "      <td>0.041379</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.006897</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.013793</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.006897</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3947</th>\n",
       "      <td>[спасибо, подарок, день, рождение, повышенный,...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.054054</td>\n",
       "      <td>0.027027</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.027027</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3948</th>\n",
       "      <td>[хотеться, поделиться, положительный, впечатле...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.032787</td>\n",
       "      <td>0.065574</td>\n",
       "      <td>0.016393</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.016393</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.016393</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.016393</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3949</th>\n",
       "      <td>[здравствуйте, нравиться, работать, ваш, менед...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.028571</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3950 rows × 102 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                   text isPositive      банк  \\\n",
       "0     [сайт, раздел, рефинансирование, сторонний, кр...          0  0.041096   \n",
       "1     [добрый, день, неоднократно, поступать, звонок...          0  0.061728   \n",
       "2     [первый, решить, воспользоваться, кредитный, к...          0  0.024194   \n",
       "3     [сам, дело, накипеть, изз, участиться, намахал...          0  0.026549   \n",
       "4     [дорожить, свой, нерв, какой, обстоятельство, ...          0  0.041935   \n",
       "...                                                 ...        ...       ...   \n",
       "3945  [очень, хороший, банк, рекомендовать, клиент, ...          1  0.033333   \n",
       "3946  [действительно, супер, карта, давать, кешбек, ...          1  0.006897   \n",
       "3947  [спасибо, подарок, день, рождение, повышенный,...          1  0.054054   \n",
       "3948  [хотеться, поделиться, положительный, впечатле...          1  0.032787   \n",
       "3949  [здравствуйте, нравиться, работать, ваш, менед...          1  0.028571   \n",
       "\n",
       "         карта  тинькофф       это      счёт      день   который  сотрудник  \\\n",
       "0     0.017123  0.003425  0.006849  0.000000  0.006849  0.023973   0.017123   \n",
       "1     0.000000  0.012346  0.012346  0.000000  0.012346  0.012346   0.037037   \n",
       "2     0.048387  0.008065  0.008065  0.016129  0.008065  0.000000   0.008065   \n",
       "3     0.011799  0.008850  0.011799  0.000000  0.008850  0.017699   0.000000   \n",
       "4     0.016129  0.000000  0.009677  0.003226  0.009677  0.009677   0.019355   \n",
       "...        ...       ...       ...       ...       ...       ...        ...   \n",
       "3945  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000   0.066667   \n",
       "3946  0.041379  0.000000  0.006897  0.000000  0.000000  0.013793   0.000000   \n",
       "3947  0.027027  0.000000  0.000000  0.000000  0.027027  0.000000   0.000000   \n",
       "3948  0.065574  0.016393  0.000000  0.000000  0.016393  0.000000   0.000000   \n",
       "3949  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000   0.000000   \n",
       "\n",
       "      ...  специалист  знать     нужно      сам  час    ждать  оформить  \\\n",
       "0     ...         0.0    0.0  0.003425  0.00000  0.0  0.00000  0.003425   \n",
       "1     ...         0.0    0.0  0.000000  0.00000  0.0  0.00000  0.000000   \n",
       "2     ...         0.0    0.0  0.000000  0.00000  0.0  0.00000  0.000000   \n",
       "3     ...         0.0    0.0  0.005900  0.00295  0.0  0.00295  0.000000   \n",
       "4     ...         0.0    0.0  0.000000  0.00000  0.0  0.00000  0.006452   \n",
       "...   ...         ...    ...       ...      ...  ...      ...       ...   \n",
       "3945  ...         0.0    0.0  0.000000  0.00000  0.0  0.00000  0.000000   \n",
       "3946  ...         0.0    0.0  0.000000  0.00000  0.0  0.00000  0.000000   \n",
       "3947  ...         0.0    0.0  0.000000  0.00000  0.0  0.00000  0.000000   \n",
       "3948  ...         0.0    0.0  0.000000  0.00000  0.0  0.00000  0.016393   \n",
       "3949  ...         0.0    0.0  0.000000  0.00000  0.0  0.00000  0.000000   \n",
       "\n",
       "        отзыв   сегодня    сервис  \n",
       "0     0.00000  0.000000  0.000000  \n",
       "1     0.00000  0.012346  0.000000  \n",
       "2     0.00000  0.008065  0.000000  \n",
       "3     0.00295  0.000000  0.002950  \n",
       "4     0.00000  0.006452  0.000000  \n",
       "...       ...       ...       ...  \n",
       "3945  0.00000  0.000000  0.000000  \n",
       "3946  0.00000  0.000000  0.006897  \n",
       "3947  0.00000  0.000000  0.000000  \n",
       "3948  0.00000  0.000000  0.016393  \n",
       "3949  0.00000  0.000000  0.000000  \n",
       "\n",
       "[3950 rows x 102 columns]"
      ]
     },
     "execution_count": 440,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for var in variables:\n",
    "    for i in range(len(df_wordbox)):\n",
    "        df_wordbox[var][i] = collections.Counter(df_wordbox['text'][i])[var]/len(df_wordbox['text'][i])\n",
    "df_wordbox"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "771170e7",
   "metadata": {},
   "source": [
    "Итак, у нас есть 100 переменных, по которым мы прогнозируем бинарный трагет (тональность). Есть разные способы, но я попробую четыре + 1\n",
    "1. логистическая регрессия (сигмоида)\n",
    "2. регрессия методом решающего дерева\n",
    "3. регрессия ближайшими соседями\n",
    "4. регрессия SVM\n",
    "5. не пользоваться регрессией/классификацией, а без учителя определить тональность библиотекой Dostoevskiy\n",
    "\n",
    "Однако, сначала я подготовлю датасет, позитивность отзывов которого будем предсказывать. С ним проделываю все аналогичные операции"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 441,
   "id": "afd4d9a1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>isPositive</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Добрый день! Я являюсь клиентом Тинькофф банк ...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Хочу выразить огромную благодарность банку Тин...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Выражаю благодарность К-ву Александру В. за ст...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>В январе 2019 года оформила потребительский кр...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Добрый день. Хочу поблагодарить банк Тинькофф ...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>Приветствую! 18.02 хотел совершить несколько п...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>Сотрудник Шахноза (6904552) очень грамотно и б...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>Добрый день!Я являюсь клиентом банка, теперь у...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>Столкнулись с проблемой: нужно было провести п...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>Всем здраствуйте,  хочу оставить еще один отзы...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1000 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                  text  isPositive\n",
       "0    Добрый день! Я являюсь клиентом Тинькофф банк ...         NaN\n",
       "1    Хочу выразить огромную благодарность банку Тин...         NaN\n",
       "2    Выражаю благодарность К-ву Александру В. за ст...         NaN\n",
       "3    В январе 2019 года оформила потребительский кр...         NaN\n",
       "4    Добрый день. Хочу поблагодарить банк Тинькофф ...         NaN\n",
       "..                                                 ...         ...\n",
       "995  Приветствую! 18.02 хотел совершить несколько п...         NaN\n",
       "996  Сотрудник Шахноза (6904552) очень грамотно и б...         NaN\n",
       "997  Добрый день!Я являюсь клиентом банка, теперь у...         NaN\n",
       "998  Столкнулись с проблемой: нужно было провести п...         NaN\n",
       "999  Всем здраствуйте,  хочу оставить еще один отзы...         NaN\n",
       "\n",
       "[1000 rows x 2 columns]"
      ]
     },
     "execution_count": 441,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_test= pd.read_csv(r'/Users/levtsipes/Desktop/Work/Тестовое задание NLP от BST/test_tin.csv', encoding='cp1251')\n",
    "df_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 442,
   "id": "667a86f3",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_test_wordbox=pd.DataFrame(columns = ['text','isPositive'], index = list(range(1000)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 443,
   "id": "162e71b3",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>isPositive</th>\n",
       "      <th>банк</th>\n",
       "      <th>карта</th>\n",
       "      <th>тинькофф</th>\n",
       "      <th>это</th>\n",
       "      <th>счёт</th>\n",
       "      <th>день</th>\n",
       "      <th>который</th>\n",
       "      <th>сотрудник</th>\n",
       "      <th>...</th>\n",
       "      <th>специалист</th>\n",
       "      <th>знать</th>\n",
       "      <th>нужно</th>\n",
       "      <th>сам</th>\n",
       "      <th>час</th>\n",
       "      <th>ждать</th>\n",
       "      <th>оформить</th>\n",
       "      <th>отзыв</th>\n",
       "      <th>сегодня</th>\n",
       "      <th>сервис</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>[добрый, день, являться, клиент, тинькофф, бан...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.043956</td>\n",
       "      <td>0.021978</td>\n",
       "      <td>0.010989</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.010989</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.021978</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>[хотеть, выразить, огромный, благодарность, ба...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.044944</td>\n",
       "      <td>0.022472</td>\n",
       "      <td>0.011236</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.011236</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.011236</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.011236</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>[выражать, благодарность, кву, александр, стол...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>[январь, год, оформить, потребительский, креди...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.050505</td>\n",
       "      <td>0.020202</td>\n",
       "      <td>0.010101</td>\n",
       "      <td>0.006734</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.003367</td>\n",
       "      <td>0.013468</td>\n",
       "      <td>0.030303</td>\n",
       "      <td>...</td>\n",
       "      <td>0.003367</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.006734</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>[добрый, день, хотеть, поблагодарить, банк, ти...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.016129</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.016129</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.016129</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>[приветствовать, хотеть, совершить, несколько,...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.044444</td>\n",
       "      <td>0.029630</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.007407</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.007407</td>\n",
       "      <td>0.007407</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.007407</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.007407</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>[сотрудник, шахноза, очень, грамотно, быстро, ...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.040000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.040000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.080000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.040000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.040000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>[добрый, день, являться, клиент, банк, продукт...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.058824</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.025210</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.042017</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033613</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>[столкнуться, проблема, нужно, провести, платё...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.018182</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.018182</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.018182</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>[весь, здраствовать, хотеть, оставить, отзыв, ...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.072727</td>\n",
       "      <td>0.018182</td>\n",
       "      <td>0.027273</td>\n",
       "      <td>0.018182</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.009091</td>\n",
       "      <td>0.009091</td>\n",
       "      <td>0.009091</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.009091</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1000 rows × 102 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                  text isPositive      банк  \\\n",
       "0    [добрый, день, являться, клиент, тинькофф, бан...        NaN  0.043956   \n",
       "1    [хотеть, выразить, огромный, благодарность, ба...        NaN  0.044944   \n",
       "2    [выражать, благодарность, кву, александр, стол...        NaN  0.032258   \n",
       "3    [январь, год, оформить, потребительский, креди...        NaN  0.050505   \n",
       "4    [добрый, день, хотеть, поблагодарить, банк, ти...        NaN  0.032258   \n",
       "..                                                 ...        ...       ...   \n",
       "995  [приветствовать, хотеть, совершить, несколько,...        NaN  0.044444   \n",
       "996  [сотрудник, шахноза, очень, грамотно, быстро, ...        NaN  0.000000   \n",
       "997  [добрый, день, являться, клиент, банк, продукт...        NaN  0.058824   \n",
       "998  [столкнуться, проблема, нужно, провести, платё...        NaN  0.018182   \n",
       "999  [весь, здраствовать, хотеть, оставить, отзыв, ...        NaN  0.072727   \n",
       "\n",
       "        карта  тинькофф       это  счёт      день   который  сотрудник  ...  \\\n",
       "0    0.021978  0.010989  0.000000   0.0  0.010989  0.000000   0.000000  ...   \n",
       "1    0.022472  0.011236  0.000000   0.0  0.011236  0.000000   0.011236  ...   \n",
       "2    0.000000  0.000000  0.000000   0.0  0.000000  0.032258   0.000000  ...   \n",
       "3    0.020202  0.010101  0.006734   0.0  0.003367  0.013468   0.030303  ...   \n",
       "4    0.000000  0.032258  0.000000   0.0  0.016129  0.000000   0.000000  ...   \n",
       "..        ...       ...       ...   ...       ...       ...        ...  ...   \n",
       "995  0.029630  0.000000  0.007407   0.0  0.000000  0.007407   0.007407  ...   \n",
       "996  0.040000  0.000000  0.040000   0.0  0.000000  0.000000   0.080000  ...   \n",
       "997  0.000000  0.000000  0.025210   0.0  0.042017  0.000000   0.033613  ...   \n",
       "998  0.000000  0.000000  0.000000   0.0  0.000000  0.018182   0.000000  ...   \n",
       "999  0.018182  0.027273  0.018182   0.0  0.009091  0.009091   0.009091  ...   \n",
       "\n",
       "     специалист     знать     нужно  сам       час  ждать  оформить     отзыв  \\\n",
       "0      0.021978  0.000000  0.000000  0.0  0.000000    0.0  0.000000  0.000000   \n",
       "1      0.000000  0.011236  0.000000  0.0  0.000000    0.0  0.000000  0.000000   \n",
       "2      0.032258  0.000000  0.000000  0.0  0.000000    0.0  0.000000  0.000000   \n",
       "3      0.003367  0.000000  0.000000  0.0  0.000000    0.0  0.006734  0.000000   \n",
       "4      0.016129  0.000000  0.000000  0.0  0.016129    0.0  0.000000  0.000000   \n",
       "..          ...       ...       ...  ...       ...    ...       ...       ...   \n",
       "995    0.000000  0.000000  0.007407  0.0  0.000000    0.0  0.000000  0.000000   \n",
       "996    0.040000  0.000000  0.000000  0.0  0.000000    0.0  0.040000  0.000000   \n",
       "997    0.000000  0.000000  0.000000  0.0  0.000000    0.0  0.000000  0.000000   \n",
       "998    0.000000  0.000000  0.018182  0.0  0.000000    0.0  0.000000  0.000000   \n",
       "999    0.000000  0.000000  0.000000  0.0  0.000000    0.0  0.000000  0.009091   \n",
       "\n",
       "     сегодня    сервис  \n",
       "0        0.0  0.000000  \n",
       "1        0.0  0.000000  \n",
       "2        0.0  0.000000  \n",
       "3        0.0  0.000000  \n",
       "4        0.0  0.000000  \n",
       "..       ...       ...  \n",
       "995      0.0  0.007407  \n",
       "996      0.0  0.000000  \n",
       "997      0.0  0.000000  \n",
       "998      0.0  0.000000  \n",
       "999      0.0  0.000000  \n",
       "\n",
       "[1000 rows x 102 columns]"
      ]
     },
     "execution_count": 443,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for i in range(len(df_test['text'])):\n",
    "    words = word_tokenize(df_test['text'][i])\n",
    "\n",
    "    words_true =[]\n",
    "    words_clean = []\n",
    "\n",
    "    for word in words:\n",
    "        word = re.sub(r'[^\\w\\s]', '', word)\n",
    "        word = re.sub(r'[0-9]+', '', word)\n",
    "        if word != '':\n",
    "            words_clean.append(word.lower())\n",
    "\n",
    "    for word in words_clean:\n",
    "        if word not in stop_words:\n",
    "            words_true.append(word)\n",
    "\n",
    "    words_lem = []\n",
    "    for word in words_true:\n",
    "        words_lem.append(lemmatize(word))\n",
    "    \n",
    "    df_test_wordbox['text'][i] = words_lem\n",
    "    df_test_wordbox['isPositive'][i] = df_test['isPositive'][i]\n",
    "    \n",
    "for var in variables:\n",
    "    df_test_wordbox[var]=np.nan   \n",
    "\n",
    "\n",
    "for var in variables:\n",
    "    for i in range(len(df_test_wordbox)):\n",
    "        df_test_wordbox[var][i] = collections.Counter(df_test_wordbox['text'][i])[var]/len(df_test_wordbox['text'][i])\n",
    "\n",
    "df_test_wordbox"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 444,
   "id": "e74bbbe4",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df_wordbox.iloc[:,2:]\n",
    "y = df_wordbox.iloc[:,:2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "id": "66dd7aa9",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 445,
   "id": "05406a65",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train_, y_test_ = train_test_split(X, y, test_size=0.3)\n",
    "y_test = y_test_['isPositive']\n",
    "y_train = y_train_['isPositive']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 450,
   "id": "3bf7534b",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LogisticRegression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 456,
   "id": "f3858f0e",
   "metadata": {},
   "outputs": [],
   "source": [
    "clf = LogisticRegression().fit(X_train, y_train.astype('int'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f63ae425",
   "metadata": {},
   "source": [
    "Логистическая регрессия готова, идем к методу решающего дерева"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "id": "c7d68b16",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.tree import DecisionTreeRegressor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 452,
   "id": "1ca83853",
   "metadata": {},
   "outputs": [],
   "source": [
    "dtr = DecisionTreeRegressor(max_depth=4).fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c52e05b8",
   "metadata": {},
   "source": [
    "Теперь ближайших соседей"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 232,
   "id": "69fe3bb7",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.neighbors import KNeighborsRegressor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 453,
   "id": "f7adf60c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "KNeighborsRegressor()"
      ]
     },
     "execution_count": 453,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "neigh = KNeighborsRegressor(n_neighbors=5)\n",
    "neigh.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2ee9c651",
   "metadata": {},
   "source": [
    "Самый навороченный метод, SVR"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 245,
   "id": "32746aa4",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.svm import SVR"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 460,
   "id": "6990c684",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SVR()"
      ]
     },
     "execution_count": 460,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "svr = SVR(C=1.0, kernel = 'rbf')\n",
    "svr.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7674be13",
   "metadata": {},
   "source": [
    "А теперь прогоним через Достоевского"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 264,
   "id": "3b82939e",
   "metadata": {},
   "outputs": [],
   "source": [
    "from dostoevsky.tokenization import RegexTokenizer\n",
    "from dostoevsky.models import FastTextSocialNetworkModel"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 457,
   "id": "d9d18cc9",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>isPositive</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2040</th>\n",
       "      <td>Добрый день. Хочу выразить свою благодарность ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1831</th>\n",
       "      <td>Не фанат кредиток, но понадобилось к своей сбе...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3855</th>\n",
       "      <td>Огромная благодарность правлению тинькофф банк...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3449</th>\n",
       "      <td>Обслуживание супер! Сервис на отлично!! Как то...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>2  июня 2019 внёс очередной платёж по кредиту ...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3287</th>\n",
       "      <td>Здравствуйте, 18 апреля 2019 года я получила с...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>871</th>\n",
       "      <td>НЕ ВКОЕМ СЛУЧАЕ НЕ ПОЛЬЗУЙТЕСЬ БАНКОМ ТИНЬКОФФ...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3542</th>\n",
       "      <td>Благодарю Вас за обслуживание, очень хорошие и...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1069</th>\n",
       "      <td>Добрый день! С банком сотрудничал достаточно д...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3517</th>\n",
       "      <td>Добрый день! Хочу поблагодарить оператора Он-Л...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1185 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                   text isPositive\n",
       "2040  Добрый день. Хочу выразить свою благодарность ...          1\n",
       "1831  Не фанат кредиток, но понадобилось к своей сбе...          0\n",
       "3855  Огромная благодарность правлению тинькофф банк...          1\n",
       "3449  Обслуживание супер! Сервис на отлично!! Как то...          1\n",
       "48    2  июня 2019 внёс очередной платёж по кредиту ...          0\n",
       "...                                                 ...        ...\n",
       "3287  Здравствуйте, 18 апреля 2019 года я получила с...          1\n",
       "871   НЕ ВКОЕМ СЛУЧАЕ НЕ ПОЛЬЗУЙТЕСЬ БАНКОМ ТИНЬКОФФ...          0\n",
       "3542  Благодарю Вас за обслуживание, очень хорошие и...          1\n",
       "1069  Добрый день! С банком сотрудничал достаточно д...          0\n",
       "3517  Добрый день! Хочу поблагодарить оператора Он-Л...          1\n",
       "\n",
       "[1185 rows x 2 columns]"
      ]
     },
     "execution_count": 457,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_dostoevsky=pd.DataFrame(columns = ['text','isPositive'], index = pd.DataFrame(y_test).index)\n",
    "for i in pd.DataFrame(y_test).index:\n",
    "    df_dostoevsky['text'].loc[i]=df['text'].loc[i]\n",
    "\n",
    "df_dostoevsky['isPositive'] = y_test_['isPositive']\n",
    "df_dostoevsky"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 410,
   "id": "fb0ab559",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning : `load_model` does not return WordVectorModel or SupervisedModel any more, but a `FastText` object which is very similar.\n"
     ]
    }
   ],
   "source": [
    "tokenizer = RegexTokenizer()\n",
    "model = FastTextSocialNetworkModel(tokenizer=tokenizer)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 487,
   "id": "293fb8ce",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "y_pred_dostoyesky=[]\n",
    "\n",
    "for i in df_dostoevsky.index:\n",
    "    \n",
    "    emos=[]\n",
    "    a = model.predict([df_dostoevsky['text'][i]], k=1)\n",
    "    \n",
    "    emos.append(list(a[0].keys())[0])\n",
    "    \n",
    "    fin_emo = collections.Counter(emos).most_common(1)[0][0]\n",
    "    \n",
    "    if fin_emo == 'positive':\n",
    "        y_pred_dostoyesky.append(1)\n",
    "    \n",
    "    else:\n",
    "        y_pred_dostoyesky.append(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "id": "a0fc08da",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import accuracy_score"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3c59e074",
   "metadata": {},
   "source": [
    "Теперь перейдем к оценке моделей"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 499,
   "id": "bff16906",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.4, 0.2, 1.0, ..., 0.6, 0.0, 0.8], dtype=object)"
      ]
     },
     "execution_count": 499,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "neigh.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 502,
   "id": "61d5690e",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "SVM regression accuracy: 0.8751054852320675 \n",
      "\n",
      "logistic regression accuracy: 0.8143459915611815 \n",
      "\n",
      "decision tree regression accuracy: 0.7881856540084389 \n",
      "\n",
      "knn regression accuracy: 0.7544303797468355 \n",
      "\n",
      "dostoevsky AN accuracy: 0.5535864978902953\n"
     ]
    }
   ],
   "source": [
    "print('SVM regression accuracy:', accuracy_score(y_test.astype('int'), np.around(svr.predict(X_test))), '\\n')\n",
    "print('logistic regression accuracy:', accuracy_score(y_test.astype('int'), clf.predict(X_test)), '\\n')\n",
    "print('decision tree regression accuracy:', accuracy_score(y_test.astype('int'), np.around(dtr.predict(X_test))), '\\n')\n",
    "print('knn regression accuracy:', accuracy_score(y_test.astype('int'), np.around(neigh.predict(X_test).astype('float'))), '\\n')\n",
    "print('dostoevsky AN accuracy:', accuracy_score(np.array(y_test).astype('int'), np.array(y_pred_dostoyesky)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "55eec582",
   "metadata": {},
   "source": [
    "Лучшим решением будет использовать SVR (SV Regression). Применим нашу модель на неразмеченной выборке, это и будет наш результат"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 405,
   "id": "fefc1a29",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>isPositive</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Добрый день! Я являюсь клиентом Тинькофф банк ...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Хочу выразить огромную благодарность банку Тин...</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Выражаю благодарность К-ву Александру В. за ст...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>В январе 2019 года оформила потребительский кр...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Добрый день. Хочу поблагодарить банк Тинькофф ...</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>Приветствую! 18.02 хотел совершить несколько п...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>Сотрудник Шахноза (6904552) очень грамотно и б...</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>Добрый день!Я являюсь клиентом банка, теперь у...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>Столкнулись с проблемой: нужно было провести п...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>Всем здраствуйте,  хочу оставить еще один отзы...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1000 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                  text  isPositive\n",
       "0    Добрый день! Я являюсь клиентом Тинькофф банк ...         0.0\n",
       "1    Хочу выразить огромную благодарность банку Тин...         1.0\n",
       "2    Выражаю благодарность К-ву Александру В. за ст...         0.0\n",
       "3    В январе 2019 года оформила потребительский кр...         0.0\n",
       "4    Добрый день. Хочу поблагодарить банк Тинькофф ...         1.0\n",
       "..                                                 ...         ...\n",
       "995  Приветствую! 18.02 хотел совершить несколько п...         0.0\n",
       "996  Сотрудник Шахноза (6904552) очень грамотно и б...         1.0\n",
       "997  Добрый день!Я являюсь клиентом банка, теперь у...         0.0\n",
       "998  Столкнулись с проблемой: нужно было провести п...         0.0\n",
       "999  Всем здраствуйте,  хочу оставить еще один отзы...         0.0\n",
       "\n",
       "[1000 rows x 2 columns]"
      ]
     },
     "execution_count": 405,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = df_test_wordbox.iloc[:,2:]\n",
    "predictions = np.abs(np.around(svr.predict(X)))\n",
    "for i in range(len(df_test)):\n",
    "    df_test['isPositive'][i] = predictions[i]\n",
    "df_test"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e9903e93",
   "metadata": {},
   "source": [
    "#### Заключение\n",
    "\n",
    "Метод SVR оказался наиболее эффективным, что, тем не менее, не говорит о его silverbullet'ности (универсальности), каждый раз нужно тестировать разные методы отталкивая от данных.\n",
    "\n",
    "Для улучшения модели можно использвать больше слов (например, 200, 300 и тд), однако коэффициент полехность/энергозатратность будет стремиться при таком увличении к нулю. Для улучшения точности можно также добавить анализ пунктуации (восклицательные знаки могут оказаться полезными) и величины букв, т.е. прописные/непрописные (думаю, что очень большое количество заглавных букв, то есть много слов кэпсом, будет явным признаком негативности). Более того, можно добавить синтаксический анализ и определять сколько каких членов предложения в отзыве (подлежащих, сказуемых и тд), что также может стать свидетельством какой-нибудь связи, для чего можно использовать pymorphy2.MorphAnalyzer(). \n",
    "\n",
    "Достоевский, несмотря на результаты, все же неплохой способ. В нашем случае проблема была в том, что достоевский по-другому понимает тональности, из-за чего скорее всего и была получена такая низкая точность "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
